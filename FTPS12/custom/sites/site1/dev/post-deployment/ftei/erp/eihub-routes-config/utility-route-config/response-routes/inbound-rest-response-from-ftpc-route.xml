<?xml version="1.0" encoding="UTF-8"?>
<!-- Licensed to the Apache Software Foundation (ASF) under one or more
contributor 
	license agreements. See the NOTICE file distributed with this work for
additional 
	information regarding copyright ownership. The ASF licenses this file to 
	You under the Apache License, Version 2.0 (the "License"); you may not use 
	this file except in compliance with the License. You may obtain a copy of 
	the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<routeTemplates xmlns="http://camel.apache.org/schema/spring">
	<routeTemplate id="restResponseFromFtpcTemplate">
		<route id="restResponseFromFtpc">
			<description>Processes a confirmation response from FTPC.</description>
			<from id="getResponseFromFtpc"
				uri="activemq:queue:{{queue-name.response.to-erp}}?exchangePattern=InOnly&amp;concurrentConsumers=4&amp;asyncConsumer=true" />
			<log loggingLevel="DEBUG" message="This is the response json from FTPC : ${body}" />
			<process id="inboundRestResponseProcessorId"
				ref="inboundRestResponseProcessor" />
			<choice id="b2mmlResponseChoice">
				<description>Check the Response for success or failure.
				</description>
				<when id="failed">
					<simple>${body} contains ' failed'</simple>
					<setHeader id="setEmailHeaderSubjectFail" name="emailType">
						<constant>{{email.type.failure}}</constant>
					</setHeader>
					<to id="vmFailSmtp_responseFromFtpc" pattern="InOut"
						uri="seda:sendEmail_erp" />
				</when>
				<when id="success">
					<simple>${body} contains ' successfully'</simple>
					<setHeader id="setEmailHeaderSubjectSuccess" name="subject">
						<constant>FTPC response message (success)</constant>
					</setHeader>
				</when>
				<otherwise id="unknownMsg_b2mmlResponseChoice">
					<to id="unknownMsgCaught_responseFromFtpc"
						uri="seda:unknownMsgCaught?exchangePattern=InOut" />
				</otherwise>
			</choice>
			<onException id="onJMSException_responseFromFtpc">
				<exception>jakarta.jms.JMSException</exception>
				<redeliveryPolicy maximumRedeliveries="2" />
				<to id="jmsExceptionHandling" pattern="InOut"
					uri="seda:jmsErrorMsgCaught" />
			</onException>
			<onException id="onCommunicationException_responseFromFtpc">
				<exception>org.apache.camel.ExchangeTimedOutException</exception>
				<redeliveryPolicy maximumRedeliveries="2" />
				<to id="communicationExceptionHandling" pattern="InOut"
					uri="seda:jmsErrorMsgCaught" />
			</onException>
			<onException id="onRouteException_responseFromFtpc">
				<exception>java.lang.Exception</exception>
				<redeliveryPolicy maximumRedeliveries="2" />
				<to id="onRouteExceptionHandling" pattern="InOut"
					uri="seda:onRouteErrorMsgCaught" />
			</onException>
		</route>
	</routeTemplate>
</routeTemplates>
